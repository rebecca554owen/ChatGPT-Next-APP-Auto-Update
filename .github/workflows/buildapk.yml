name: Build APK

on:
  push:
    tags:
      - "v*"
  workflow_dispatch: 
    inputs:
      tag:
        description: 'Release tag version'
        required: true
        default: 'v0.0.0'
      build_site:
        description: 'Build website'
        type: boolean
        default: false

jobs:
  build-site:
    name: Build Website
    runs-on: ubuntu-latest
    if: github.event.inputs.build_site == 'true'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout submodules
        uses: actions/checkout@v4
        with:
          repository: ChatGPTNextWeb/ChatGPT-Next-Web
          path: ChatGPT-Next-Web
          fetch-depth: 1

      - name: Setup NodeJs
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'
          cache-dependency-path: './ChatGPT-Next-Web/yarn.lock'

      - name: Install Dependencies
        working-directory: ./ChatGPT-Next-Web
        run: yarn add @cloudflare/next-on-pages && yarn install --frozen-lockfile

      - name: Build Site
        working-directory: ./ChatGPT-Next-Web
        run: npx @cloudflare/next-on-pages@1

      - name: Zip HTML
        working-directory: ./ChatGPT-Next-Web/.vercel/output
        run: |
          mv static web
          mkdir -p ../../../assets
          zip -qr ../../../assets/web.zip ./web/

      - name: Cache web.zip
        uses: actions/cache@v4
        with:
          path: assets/web.zip
          key: web-zip-${{ hashFiles('ChatGPT-Next-Web/**') }}

  build-apk:
    name: Build APK
    needs: [build-site]
    if: always()
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore web.zip from cache
        uses: actions/cache@v4
        with:
          path: assets/web.zip
          key: web-zip-${{ hashFiles('ChatGPT-Next-Web/**') }}
          restore-keys: |
            web-zip-

      - name: Fetch secrets
        run: |
          curl -u ${{ secrets.BASIC_AUTH }} -o android/app/app.key ${{ secrets.URL_PREFIX }}app.key
          curl -u ${{ secrets.BASIC_AUTH }} -o android/key.properties ${{ secrets.URL_PREFIX }}key.properties

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
          cache: true

      - name: Get release tag
        id: get-tag
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Update version in pubspec.yaml
        run: |
          TAG=${{ steps.get-tag.outputs.tag }}
          # 使用运行次数和尝试次数组合
          sed -i "s/^version: .*/version: ${TAG#v}+${{ github.run_number }}.${{ github.run_attempt }}/" pubspec.yaml

      - name: Build APK
        run: flutter build apk --release

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-assets
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            assets/web.zip

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build/app/outputs/flutter-apk/app-release.apk
            assets/web.zip
          tag_name: ${{ steps.get-tag.outputs.tag }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
